% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnostic.R
\name{covariate_balance_test}
\alias{covariate_balance_test}
\title{Covariate Balance Test}
\usage{
covariate_balance_test(
  data = NULL,
  aps = NULL,
  X = NULL,
  Z = NULL,
  degen = c(0, 1),
  apslab = "APS",
  xlab = c("X1"),
  zlab = "Z",
  verbose = T
)
}
\arguments{
\item{data}{Dataset containing ML input variables X, treatment assignment Z, and aps.}

\item{aps}{Vector of APS values.}

\item{X}{Object containing ML inputs X.}

\item{Z}{Vector of ML recommendation values Z.}

\item{degen}{Vector of values for which APS is degenerate. Defaults to c(0,1).}

\item{apslab}{Column name of APS variable. Defaults to "APS".}

\item{xlab}{Character vector of column names of ML inputs X. Defaults to c("X1").}

\item{zlab}{Column name of Z variable. Defaults to "Z".}

\item{verbose}{Boolean indicator for whether to print summary output of estimation. Defaults to True.}
}
\value{
List containing fitted multivariate multiple linear model and the results of the joint hypothesis test,
including the F statistic and p-value of the Pillai's trace statistic.
}
\description{
Covariate Balance Test
}
\details{
If the primary data vectors (aps, X, Z) are not passed, then the fallback is to search for the
\verb{_lab} variables in the \code{data} object.

This function estimates a multivariate multiple regression system, varying each of the ML input variables
in \code{X} against the common covariates \code{APS} and \code{Z}, where \strong{\code{APS} is non-degenerate}.
The covariate balance test reports the
results of each individual regression, as well as the joint hypothesis result for the coefficient on \code{Z}.
This helps to establish whether \code{APS} performs adequately as a control for differences created through
treatment selection. The regression system is estimated on the sample for which \code{APS} is non-degenerate.
}
\examples{
# Iris data
data("iris")
assign_cutoff <- function(X, cutoff){
  ret <- as.integer(X > cutoff)
  return(ret)
}
model <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data=iris)
aps <- estimate_aps(iris, model, xc = names(iris)[2:4], infer=FALSE, s=400,
        delta=0.8, fcn=assign_cutoff, cutoff = 6)
Z <- assign_cutoff(iris$Sepal.Length, 6)
X <- iris[,2:4]
iris[, APS := aps]
iris[, Z := Z]
# Two ways of sending inputs
out_direct <- covariate_balance_test(aps = aps, X = iris[, 2:4], Z = Z)
out_indirect <- covariate_balance_test(data = iris, apslab = "APS",
           xlab = names(iris)[2:4])
}
